blueprint:
  name: "Rollo Steuerung nur nach Bedingungen"
  description: "Steuere Rollos basierend auf mehreren Bedingungen zum Öffnen und Schließen, ohne Zeittrigger."
  domain: automation
  input:
    roller_shutter:
      name: "Rollo"
      description: "Das zu steuernde Rollo."
      selector:
        entity:
          domain: cover

    # Bedingungen zum Öffnen der Rollos
    open_conditions:
      name: "Bedingungen zum Öffnen"
      description: "Liste der Bedingungen, unter denen das Rollo geöffnet werden soll."
      selector:
        entity:
          multiple: true
          domain: binary_sensor

    # Bedingungen zum Schließen der Rollos
    close_conditions:
      name: "Bedingungen zum Schließen"
      description: "Liste der Bedingungen, unter denen das Rollo geschlossen werden soll."
      selector:
        entity:
          multiple: true
          domain: binary_sensor

mode: single
max_exceeded: silent

trigger:
  # Auslöser für das Öffnen der Rollos
  - platform: state
    entity_id: !input 'open_conditions'
    to: 'on'

  # Auslöser für das Schließen der Rollos
  - platform: state
    entity_id: !input 'close_conditions'
    to: 'on'

condition: []

action:
  # Öffnen der Rollos
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {% for entity_id in (open_conditions | list) %}
              {{ is_state(entity_id, 'on') }}
              {% endfor %}
        sequence:
          - service: cover.open_cover
            target:
              entity_id: !input "roller_shutter"

  # Schließen der Rollos
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {% for entity_id in (close_conditions | list) %}
              {{ is_state(entity_id, 'on') }}
              {% endfor %}
        sequence:
          - service: cover.close_cover
            target:
              entity_id: !input "roller_shutter"
